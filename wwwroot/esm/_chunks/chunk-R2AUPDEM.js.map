{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/School/ExamColumns.ts", "../../../Modules/ServerTypes/School/ExamRow.ts", "../../../Modules/ServerTypes/School/ExamService.ts", "../../../Modules/ServerTypes/School/GradeColumns.ts", "../../../Modules/ServerTypes/School/GradeRow.ts", "../../../Modules/ServerTypes/School/GradeService.ts", "../../../Modules/ServerTypes/School/QuestionColumns.ts", "../../../Modules/ServerTypes/School/QuestionRow.ts", "../../../Modules/ServerTypes/School/QuestionService.ts", "../../../Modules/ServerTypes/School/ExamForm.ts", "../../../Modules/ServerTypes/School/GradeForm.ts", "../../../Modules/ServerTypes/School/QuestionForm.ts"],
  "sourcesContent": ["\uFEFFexport class ExamColumns {\r\n    static columnsKey = 'School.Exam';\r\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ExamRow {\n    ExamId?: number;\n    Name?: string;\n    Description?: string;\n    Time?: number;\n    Status?: boolean;\n    CreatedDate?: string;\n}\n\nexport abstract class ExamRow {\n    static readonly idProperty = 'ExamId';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'School.Exam';\n    static readonly lookupKey = 'School.Exam';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<ExamRow>('School.Exam') }\n    static async getLookupAsync() { return getLookupAsync<ExamRow>('School.Exam') }\n\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<ExamRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { ExamRow } from \"./ExamRow\";\n\nexport namespace ExamService {\n    export const baseUrl = 'School/Exam';\n\n    export declare function Create(request: SaveRequest<ExamRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ExamRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ExamRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ExamRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"School/Exam/Create\",\n        Update: \"School/Exam/Update\",\n        Delete: \"School/Exam/Delete\",\n        Retrieve: \"School/Exam/Retrieve\",\n        List: \"School/Exam/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ExamService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class GradeColumns {\r\n    static columnsKey = 'School.Grade';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface GradeRow {\n    GradeId?: number;\n    Code?: string;\n    Name?: string;\n    Capacity?: number;\n    Status?: boolean;\n}\n\nexport abstract class GradeRow {\n    static readonly idProperty = 'GradeId';\n    static readonly nameProperty = 'Code';\n    static readonly localTextPrefix = 'School.Grade';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<GradeRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { GradeRow } from \"./GradeRow\";\n\nexport namespace GradeService {\n    export const baseUrl = 'School/Grade';\n\n    export declare function Create(request: SaveRequest<GradeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<GradeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GradeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GradeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"School/Grade/Create\",\n        Update: \"School/Grade/Update\",\n        Delete: \"School/Grade/Delete\",\n        Retrieve: \"School/Grade/Retrieve\",\n        List: \"School/Grade/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>GradeService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class QuestionColumns {\r\n    static columnsKey = 'School.Question';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface QuestionRow {\n    QuestionId?: number;\n    QuestionTitle?: string;\n    OptionA?: string;\n    OptionB?: string;\n    OptionC?: string;\n    OptionD?: string;\n    AnswerKey?: number;\n    Status?: boolean;\n    CreatedDate?: string;\n    ExamId?: number;\n    ExamName?: string;\n}\n\nexport abstract class QuestionRow {\n    static readonly idProperty = 'QuestionId';\n    static readonly nameProperty = 'QuestionTitle';\n    static readonly localTextPrefix = 'School.Question';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<QuestionRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { QuestionRow } from \"./QuestionRow\";\n\nexport namespace QuestionService {\n    export const baseUrl = 'School/Question';\n\n    export declare function Create(request: SaveRequest<QuestionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<QuestionRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<QuestionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<QuestionRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"School/Question/Create\",\n        Update: \"School/Question/Update\",\n        Delete: \"School/Question/Delete\",\n        Retrieve: \"School/Question/Retrieve\",\n        List: \"School/Question/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>QuestionService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, IntegerEditor, BooleanEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ExamForm {\n    Name: StringEditor;\n    Description: StringEditor;\n    Time: IntegerEditor;\n    Status: BooleanEditor;\n    CreatedDate: DateEditor;\n}\n\nexport class ExamForm extends PrefixedContext {\n    static formKey = 'School.Exam';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ExamForm.init)  {\n            ExamForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n            var w2 = BooleanEditor;\n            var w3 = DateEditor;\n\n            initFormType(ExamForm, [\n                'Name', w0,\n                'Description', w0,\n                'Time', w1,\n                'Status', w2,\n                'CreatedDate', w3\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, IntegerEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface GradeForm {\n    Code: StringEditor;\n    Name: StringEditor;\n    Capacity: IntegerEditor;\n    Status: BooleanEditor;\n}\n\nexport class GradeForm extends PrefixedContext {\n    static formKey = 'School.Grade';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!GradeForm.init)  {\n            GradeForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n            var w2 = BooleanEditor;\n\n            initFormType(GradeForm, [\n                'Code', w0,\n                'Name', w0,\n                'Capacity', w1,\n                'Status', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, IntegerEditor, BooleanEditor, DateEditor, LookupEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface QuestionForm {\n    QuestionTitle: StringEditor;\n    OptionA: StringEditor;\n    OptionB: StringEditor;\n    OptionC: StringEditor;\n    OptionD: StringEditor;\n    AnswerKey: IntegerEditor;\n    Status: BooleanEditor;\n    CreatedDate: DateEditor;\n    ExamId: LookupEditor;\n}\n\nexport class QuestionForm extends PrefixedContext {\n    static formKey = 'School.Question';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!QuestionForm.init)  {\n            QuestionForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = IntegerEditor;\n            var w2 = BooleanEditor;\n            var w3 = DateEditor;\n            var w4 = LookupEditor;\n\n            initFormType(QuestionForm, [\n                'QuestionTitle', w0,\n                'OptionA', w0,\n                'OptionB', w0,\n                'OptionC', w0,\n                'OptionD', w0,\n                'AnswerKey', w1,\n                'Status', w2,\n                'CreatedDate', w3,\n                'ExamId', w4\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["ExamColumns", "__name", "import_q", "ExamRow", "__async", "__name", "import_q", "ExamService", "x", "r", "s", "o", "GradeColumns", "__name", "import_q", "GradeRow", "__name", "import_q", "GradeService", "x", "r", "s", "o", "QuestionColumns", "__name", "import_q", "QuestionRow", "__name", "import_q", "QuestionService", "x", "r", "s", "o", "import_corelib", "import_q", "_ExamForm", "prefix", "w0", "w1", "w2", "w3", "ExamForm", "__name", "import_corelib", "import_q", "_GradeForm", "prefix", "w0", "w1", "w2", "GradeForm", "__name", "import_corelib", "import_q", "_QuestionForm", "prefix", "w0", "w1", "w2", "w3", "w4", "QuestionForm", "__name"]
}
